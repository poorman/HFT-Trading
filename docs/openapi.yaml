openapi: 3.0.3
info:
  title: HFT Trading System API
  description: High-Frequency Trading System REST API
  version: 1.0.0
  contact:
    name: HFT System Support
    
servers:
  - url: http://localhost:8082
    description: Local development server
  - url: https://hftapi.widesurf.com
    description: Production server

tags:
  - name: Health
    description: Health check and system status endpoints
  - name: Orders
    description: Order management endpoints
  - name: Positions
    description: Position tracking endpoints
  - name: Executions
    description: Trade execution history
  - name: Analytics
    description: Performance analytics and P&L

paths:
  /health:
    get:
      tags: [Health]
      summary: Health check
      description: Returns detailed health status of all services
      responses:
        '200':
          description: All services healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
        '503':
          description: Service degraded
          
  /ready:
    get:
      tags: [Health]
      summary: Readiness probe
      responses:
        '200':
          description: Service ready
          
  /metrics:
    get:
      tags: [Health]
      summary: Prometheus metrics
      responses:
        '200':
          description: Metrics in Prometheus format

  /api/order:
    post:
      tags: [Orders]
      summary: Submit trading order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '200':
          description: Order submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'

  /api/orders:
    get:
      tags: [Orders]
      summary: Get all orders
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'

  /api/orders/{id}:
    get:
      tags: [Orders]
      summary: Get order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  /api/positions:
    get:
      tags: [Positions]
      summary: Get current positions
      responses:
        '200':
          description: List of positions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Position'

  /api/executions:
    get:
      tags: [Executions]
      summary: Get execution history
      responses:
        '200':
          description: List of executions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Execution'

  /api/analytics:
    get:
      tags: [Analytics]
      summary: Get trading analytics
      responses:
        '200':
          description: Analytics data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analytics'

  /api/analytics/daily-pnl:
    get:
      tags: [Analytics]
      summary: Get daily P&L breakdown
      responses:
        '200':
          description: Daily P&L data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyPnL'

components:
  schemas:
    HealthStatus:
      type: object
      properties:
        status:
          type: string
          enum: [ok, degraded]
        timestamp:
          type: integer
        services:
          type: object
          
    OrderRequest:
      type: object
      required:
        - client_order_id
        - symbol
        - side
        - quantity
        - order_type
      properties:
        client_order_id:
          type: string
          example: "ORD123456"
        symbol:
          type: string
          example: "AAPL"
        side:
          type: string
          enum: [BUY, SELL]
        quantity:
          type: number
          example: 100
        price:
          type: number
          example: 150.50
        order_type:
          type: string
          enum: [MARKET, LIMIT, STOP]
          
    OrderResponse:
      type: object
      properties:
        client_order_id:
          type: string
        order_id:
          type: string
        status:
          type: string
        message:
          type: string
          
    Order:
      type: object
      properties:
        id:
          type: integer
        client_order_id:
          type: string
        order_id:
          type: string
        symbol:
          type: string
        side:
          type: string
        quantity:
          type: number
        price:
          type: number
        order_type:
          type: string
        status:
          type: string
        filled_qty:
          type: number
        remaining_qty:
          type: number
        created_at:
          type: string
          format: date-time
          
    Position:
      type: object
      properties:
        symbol:
          type: string
        quantity:
          type: number
        avg_price:
          type: number
        unrealized_pnl:
          type: number
          
    Execution:
      type: object
      properties:
        id:
          type: integer
        order_id:
          type: string
        symbol:
          type: string
        side:
          type: string
        fill_price:
          type: number
        fill_qty:
          type: number
        timestamp:
          type: string
          format: date-time
          
    Analytics:
      type: object
      properties:
        total_pnl:
          type: number
        total_trades:
          type: integer
        winning_trades:
          type: integer
        losing_trades:
          type: integer
        win_rate:
          type: number
          
    DailyPnL:
      type: object
      properties:
        daily_pnl:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
              pnl:
                type: number
              count:
                type: integer

